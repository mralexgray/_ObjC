
/*! @note This is an AUTOMATICALLY generated file!
    Built on Apr 2, 2015, 9:21:33 AM from /Volumes/2T/ServiceData/AtoZ.framework/AtoZUniversal/_ObjC/_ObjC.plist */

/*!   @abstract _ObjC is concise dialect of ObjC that is terse and compatible - without needless tricks.
    @discussion It strives to minimize excessive *'s, {}'s, and ()'s, and so on, and so forth.
                Class pointers and types are typedef'd to aliases, with no pointer,
                formatted like _Four lettes, starting with an underscore, capitalized. */

#ifdef   __OBJC__
#ifndef   _ObjC__
#define   _ObjC__

#define                       IOS_ONLY  TARGET_OS_IPHONE
#define                       MAC_ONLY  !IOS_ONLY
#define                              _  ;
#define                          _Type  typedef
#define                             _C  const
#define                             _E  extern
#define                             _I  inline
#define                             _S  static
#define                             _U  unsigned


/// Let's standarize the preprocessor names too!


#define                           Reqd  required
#define                           Optn  optional
#define                           Incl  import
#define                           Stop  end
#define                            Ôø≠  @Stop


@import ObjectiveC _
 @class AVAudioPlayer,
        WebView _
#    if MAC_ONLY
@import Cocoa _
#  elif IOS_ONLY
@import UIKit _


// Standarize names 1:1 between platforms.


#define                          NSNib  UINib
#define                          NSApp  UIApp
#define                         NSFont  UIFont
#define                         NSView  UIView
#define                         NSRect  CGRect
#define                         NSSize  CGSize
#define                        NSImage  UIImage
#define                        NSColor  UIColor
#define                        NSPoint  CGPoint
#define                        NSEvent  UIEvent
#define                       NSScreen  UIScreen
#define                       NSWindow  UIWindow
#define                     NSZeroSize  CGSizeZero
#define                     NSZeroRect  CGRectZero
#define                    NSZeroPoint  CGPointZero
#define                    NSTableView  UITableView
#define                   NSBezierPath  UIBezierPath
#define                  NSApplication  UIApplication
#define             NSUserNotification  UILocalNotification


#endif // Per-Platform Imports

primitives_ObjC_Meth_Meta_Void_IsIt_ULng_Long_SInt_UInt_Comp

structs_Size_Rect_Flot_Cord_Rnge_AffT
MAC_ONLYpointers_MAC_ONLY_Task_Menu_WebV_SubM_PicV_Splt_Scrl_OutV_TCol_LstXMAC_ONLY
pointers_SndP_Layr_Appl_ListmList_Path_Bndl_Colr_DatamData_DictmDict_Errr_Evnt_File_Font_Pict_Note_Numb_NObj_PStlmPStl_Pipe_TextmText_TblV_NUrl_Defs_View_Wind_Char_CChr_UChr


/*! Kind - Interface (Prototypes, Public, Name, etc)
    Vows - Protocol  (Promises, etc)
    Plan - Implemenation
    Xtra - Categories                                      */


#define                           Plan  implementation
#define                          _Kind  @interface
#define           Kind_(Name,Meta,...)  interface Name : Meta __VA_ARGS__
#define                 Kind(Name,...)  Kind_(Name,NObj,__VA_ARGS__)
#define                         _Kind_  (instancetype) /// Sugar for (instancetype) methods.
#define                           Vows  protocol
#define            Xtra(Extends,Named)  interface Extends      (Named)
#define                    _Cat(K,...)  @interface K (Sans) __VA_ARGS__; @end
#define        XtraPlan(Extends,Named)  implementation Extends (Named)
#define                  XtraStop(...)  Stop
#define                          _IMPL  @implementation
#define                          _IFCE  @interface
#define                          _PRTO  @protocol
#define                          _IMPT  @import
#define                          _FINI  @end
#define                       Ôºû(...)  @Xtra(__VA_ARGS__)
#define                       Ôºú(...)  @XtraPlan(__VA_ARGS__)
#define                            Ôºø  Plan
#define                   _Test(X,...)  - (void) test##X { ({ __VA_ARGS__; }); }
#define                     XCTUp(...)  - (void) setUp { [super setUp]; ({ __VA_ARGS__; }); }
#define                   XCTDown(...)  - (void) tearDown { ({ __VA_ARGS__; }); [super tearDown]; }
#define                _Case(Name,...)  @Incl XCTest; @Kind_ (Name,XCTestCase)  ￭ @Plan Name XCTUp(__VA_ARGS__)
#define                         P(...)  id<__VA_ARGS__>
#define               INTERFACE(X,...)  @interface X : __VA_ARGS__ + (instancetype)
#define                   INIT_(K,...)  [[K alloc] init##__VA_ARGS__]
#define                       NEW(A,B)  A *B = A.new



#define                            oFK  objectForKey
#define                            vFK  valueForKey
#define                           vFKP  valueForKeyPath
#define                             mC  mutableCopy
#define                          mAVFK  mutableArrayValueForKey
#define                            bFK  boolForKey
#define                             bV  boolValue
#define                             dV  doubleValue
#define                             fV  floatValue
#define                             iV  integerValue
#define                            uIV  unsignedIntegerValue
#define                           rngV  rangeValue
#define                           strV  stringValue
#define                             rV  rectValue
#define                             pV  pointValue


// GEOMETRY TRANSLATIONS
IOS_ONLY#define                      rectValue  CGRectValue
#define                     pointValue  CGPointValue
#define                     NSMakeSize  CGSizeMake
#define                    NSMakePoint  CGPointMake
#define                     NSMakeSize  CGSizeMake
#define                     NSMakeRect  CGRectMake
#define                   NSEqualSizes  CGSizeEqualToSize
#define                  NSEqualPoints  CGPointEqualToPoint
#define                   NSEqualRects  CGRectEqualToRect
#define             NSPointInRect(P,R)  CGRectContainsPoint(R,P)
IOS_ONLY
#endif // _ObjC__
#endif // __ObjC__

